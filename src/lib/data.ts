import {
  Patent,
  Inventor,
  Employee,
  FERHistory,
  FEREntry,
} from './types';

// Mock data for patents
const inventors: Inventor[] = [
  {
    id: "i-1",
    tracking_id: "PT001",
    inventor_name: "John Doe",
    inventor_addr: "123 Main St, Anytown USA",
  },
  {
    id: "i-2",
    tracking_id: "PT002",
    inventor_name: "Alice Smith",
    inventor_addr: "456 Oak Ave, Somecity USA",
  },
];

// Mock data for employees
const employees: Employee[] = [
  {
    id: "e-1",
    emp_id: "EMP001",
    full_name: "Admin User",
    email: "admin@example.com",
    ph_no: "555-000-0001",
    password: "password",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    role: "admin",
  },
  {
    id: "e-2",
    emp_id: "EMP002",
    full_name: "Drafter One",
    email: "drafter@example.com",
    ph_no: "555-000-0002",
    password: "password",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    role: "drafter",
  },
  {
    id: "e-3",
    emp_id: "EMP003",
    full_name: "Filer Two",
    email: "filer@example.com",
    ph_no: "555-000-0003",
    password: "password",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    role: "filer",
  },
];

// Mock FER History data
// const fer_history: FERHistory[] = [
//   {
//     id: "fh-1",
//     tracking_id: "PT001",
//     fer_drafter_assgn: "Jane Smith",
//     fer_drafter_deadline: "2023-12-01",
//     fer_filer_assgn: "Bob Johnson",
//     fer_filer_deadline: "2023-12-15",
//   },
//   {
//     id: "fh-2",
//     tracking_id: "PT002",
//     fer_drafter_assgn: "Alice Brown",
//     fer_drafter_deadline: "2023-11-15",
//     fer_filer_assgn: "Charlie Davis",
//     fer_filer_deadline: "2023-11-30",
//   },
// ];

// Mock FER Entries data
const fer_entries: FEREntry[] = [
  {
    id: "fe-1",
    patent_id: "PT001",
    fer_number: 1,
    fer_date: "2023-01-15",
    fer_drafter_assgn: "Drafter One",
    fer_drafter_deadline: "2023-02-28",
    fer_drafter_status: 1,
    fer_filer_assgn: "Filer Two",
    fer_filer_deadline: "2023-03-15",
    fer_filing_status: 1,
    fer_review_draft_status: 2,
    fer_review_file_status: 0,
    fer_completion_status: 3,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: "fe-2",
    patent_id: "PT002",
    fer_number: 1,
    fer_date: "2023-02-01",
    fer_drafter_assgn: "Drafter One",
    fer_drafter_deadline: "2023-03-15",
    fer_drafter_status: 0,
    fer_filer_assgn: "Filer Two",
    fer_filer_deadline: "2023-03-31",
    fer_filing_status: 0,
    fer_review_draft_status: 0,
    fer_review_file_status: 0,
    fer_completion_status: 0,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

// Mock data for patents
export const patents: Patent[] = [
  {
    id: "PT001",
    tracking_id: "PT001",
    patent_applicant: "Tech Innovations Inc.",
    client_id: "CI001",
    application_no: "AP-2023-1001",
    date_of_filing: "2023-01-10",
    patent_title: "Method for Efficient Data Compression",
    applicant_addr: "144 Tech Park, Silicon Valley, CA",
    inventor_ph_no: "555-111-2222",
    inventor_email: "john.doe@example.com",
    ps_drafting_status: 1,
    ps_drafter_assgn: "Drafter One",
    ps_drafter_deadline: "2023-01-25",
    ps_review_draft_status: 2,
    ps_filing_status: 0,
    ps_filer_assgn: "Filer Two",
    ps_filer_deadline: "2023-02-10",
    ps_review_file_status: 0,
    ps_completion_status: 0,
    cs_drafting_status: 0,
    cs_drafter_assgn: "Drafter One",
    cs_drafter_deadline: "2023-02-28",
    cs_review_draft_status: 0,
    cs_filing_status: 0,
    cs_filer_assgn: "Filer Two",
    cs_filer_deadline: "2023-03-15",
    form_01: true,
    form_02_ps: false,
    form_02_cs: true,
    form_03: false,
    form_04: true,
    form_05: false,
    form_06: true,
    form_07: false,
    form_07a: true,
    form_08: false,
    form_08a: true,
    form_09: false,
    form_09a: true,
    form_10: false,
    form_11: true,
    form_12: false,
    form_13: true,
    form_14: false,
    form_15: true,
    form_16: null,
    form_17: null,
    form_18: null,
    form_18a: null,
    form_19: null,
    form_20: null,
    form_21: null,
    form_22: null,
    form_23: null,
    form_24: null,
    form_25: null,
    form_26: null,
    form_27: null,
    form_28: null,
    form_29: null,
    form_30: null,
    form_31: null,
    other_forms: null,
    cs_review_file_status: 0,
    cs_completion_status: 0,
    fer_status: 1,
    fer_drafter_status: 0,
    fer_drafter_assgn: "Drafter One",
    fer_drafter_deadline: "2023-03-31",
    fer_review_draft_status: 0,
    fer_filing_status: 0,
    fer_filer_assgn: "Filer Two",
    fer_filer_deadline: "2023-04-15",
    fer_review_file_status: 0,
    fer_completion_status: 0,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    inventors: [inventors[0]],
    fer_history: [
      {
        id: "fh-1",
        tracking_id: "PT001",
        fer_drafter_assgn: "Jane Smith",
        fer_drafter_deadline: "2023-12-01",
        fer_filer_assgn: "Bob Johnson",
        fer_filer_deadline: "2023-12-15",
        created_at: new Date().toISOString()
      }
    ],
    fer_entries: [fer_entries[0]],
    notes: "Initial patent application notes.",
  },
  {
    id: "PT002",
    tracking_id: "PT002",
    patent_applicant: "Global Solutions Ltd.",
    client_id: "CI002",
    application_no: "AP-2023-1002",
    date_of_filing: "2023-02-15",
    patent_title: "Innovative System for Water Purification",
    applicant_addr: "789 Innovation Rd, Cleanville, NV",
    inventor_ph_no: "555-333-4444",
    inventor_email: "alice.smith@example.com",
    ps_drafting_status: 2,
    ps_drafter_assgn: "Drafter One",
    ps_drafter_deadline: "2023-03-01",
    ps_review_draft_status: 1,
    ps_filing_status: 1,
    ps_filer_assgn: "Filer Two",
    ps_filer_deadline: "2023-03-15",
    ps_review_file_status: 2,
    ps_completion_status: 0,
    cs_drafting_status: 1,
    cs_drafter_assgn: "Drafter One",
    cs_drafter_deadline: "2023-03-31",
    cs_review_draft_status: 0,
    cs_filing_status: 0,
    cs_filer_assgn: "Filer Two",
    cs_filer_deadline: "2023-04-15",
    form_01: true,
    form_02_ps: false,
    form_02_cs: true,
    form_03: false,
    form_04: true,
    form_05: false,
    form_06: true,
    form_07: false,
    form_07a: true,
    form_08: false,
    form_08a: true,
    form_09: false,
    form_09a: true,
    form_10: false,
    form_11: true,
    form_12: false,
    form_13: true,
    form_14: false,
    form_15: true,
    form_16: null,
    form_17: null,
    form_18: null,
    form_18a: null,
    form_19: null,
    form_20: null,
    form_21: null,
    form_22: null,
    form_23: null,
    form_24: null,
    form_25: null,
    form_26: null,
    form_27: null,
    form_28: null,
    form_29: null,
    form_30: null,
    form_31: null,
    other_forms: null,
    cs_review_file_status: 0,
    cs_completion_status: 0,
    fer_status: 1,
    fer_drafter_status: 0,
    fer_drafter_assgn: "Drafter One",
    fer_drafter_deadline: "2023-04-30",
    fer_review_draft_status: 0,
    fer_filing_status: 0,
    fer_filer_assgn: "Filer Two",
    fer_filer_deadline: "2023-05-15",
    fer_review_file_status: 0,
    fer_completion_status: 0,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    inventors: [inventors[1]],
    fer_history: [
      {
        id: "fh-2",
        tracking_id: "PT002",
        fer_drafter_assgn: "Jane Smith",
        fer_drafter_deadline: "2023-12-01",
        fer_filer_assgn: "Bob Johnson",
        fer_filer_deadline: "2023-12-15",
        created_at: new Date().toISOString()
      }
    ],
    fer_entries: [fer_entries[1]],
    notes: "Second patent application notes.",
  },
];

// Function to fetch patents
export const fetchPatents = async (): Promise<Patent[]> => {
  return patents;
};

// Function to fetch a single patent by ID
export const fetchPatentById = async (id: string): Promise<Patent | undefined> => {
  return patents.find((patent) => patent.id === id);
};

// Function to fetch employees
export const fetchEmployees = async (): Promise<Employee[]> => {
  return employees;
};

// Function to fetch a single employee by ID
export const fetchEmployeeById = async (id: string): Promise<Employee | undefined> => {
  return employees.find((employee) => employee.id === id);
};
